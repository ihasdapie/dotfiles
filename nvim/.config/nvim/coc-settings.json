// vim:ft=jsonc
{
    "colors.enable": true
    "coc.source.emoji.filetypes": [
        "gitcommit",
        "markdown",
        "pandoc"
    ],
    "suggest.noselect": true, // Accept first suggestion on TAB

    "rust-analyzer.checkOnSave.command": "clippy",
    "coc.preferences.rootPatterns": [".git", ".hg", ".vim", ".projections.json"],
    "coc.preferences.jumpCommand": "CocSplitIfNotOpen",
    "coc.preferences.currentFunctionSymbolAutoUpdate": true,


    /* "coc.source.coc-tabnine.priority": 50, */
    // "tabnine.disable_filetypes": ["pandoc", "markdown", "latex", "html", "txt"],

    /* Coc-Python  */
    "pyright.inlayHints.variableTypes": false,
    "pyright.inlayHints.functionReturnTypes": false,
    "pyright.inlayHints.parameterTypes": false,

    "python.formatting.provider": "black",
    // "python.linting.pylintEnabled": true,
    // "python.linting.pylintArgs": ["--disable=R,C", "--generated-members=numpy.*,torch.*"],
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": ["--max-line-length=120", "--import-order-style=google"],
    // "python.linting.mypyEnabled": true,
    "python.linting.pydocstyleEnabled": true,
    "python.venvPath": "/home/ihasdapie/.cache/pypoetry/virtualenvs",
    /* "coc.preferences.formatOnSaveFiletypes": ["python"], */


    /* Coc-Explorer */
    "explorer.icon.enableNerdfont": true,
    "explorer.icon.source": "nvim-web-devicons",

    /* coc-vimtex */


    "coc.source.vimtex.filetypes": [
        "tex",
        "plaintex",
        "latex",
        "markdown",
        "pandoc"
    ],




    "suggest.completionItemKindLabels": {
        // NOTE: 2-length itemkindlabels get screwed up by transparent pum
        "keyword" : "Ôáû ",
        "variable" : "Óûõ ",
        "value" : "Ô¢ü ",
        "function" : "ùëì",
        "operator" : "Œ®",
        "method" : "ÔÇö",
        "constructor" : "ÔÇ≠ ",
        "reference" : "Ô©Ü",
        "constant" : "Ô£æ ",
        "struct" : "\ufb44", // This char is weird?? nf-mdi-file_tree Ô≠Ñ
        "class" : "ÔÉ® ",
        "interface" : "Ôêó ",
        "text" : "Óòí ",
        // "enum" : "Ôêµ ",
        "enum": " Ô©ó",
        "enumMember" : "ÔÄ´ ",
        "module" : "Ôêç ", // why does this show up in different sizes?
        "color" : "Óà´ ",
        "property" : "Óò§ ",
        "field" : "Ô¶æ",
        "unit" : "Ôëµ ",
        "event" : "Ô´ç",
        "file" : "Ôú£ ",
        "folder" : "ÔÑî ",
        "snippet" : "Óòã ",
        "typeParameter" : "Ôú® ",
        "default" : "Ôäú "
    },







    /* "suggest.completionItemKindLabels": {
        "method": " Óûõ ",
        "function": " Óûõ ",
        "variable": "[Óúñ]",
        "field": " Óúñ ",
        "typeParameter": "<ÔûÉ>",
        "constant": " Ôõº ",
        "class": " Ô≠Ñ ",
        "interface": " Ô®†",
        "struct": " ÔÜ≥ ",
        "event": " ÔÉß ",
        "operator": " Ôöî ",
        "module": " Ôô® ",
        "property": " ÔÇ≠ ",
        "reference": " ÔíÅ ",
        "keyword": " Ôùß ",
        "file": " ÔÖõ ",
        "folder": " Ô±Æ ",
        "color": " Óà´ ",
        "unit": " Ô•¨ ",
        "snippet": " Ôóè ",
        "text": " Ôî´ ",
        "constructor": " Óàè ",
        "value": " Ô¢ü ",
        "enumMember": " ÔÖù "
    }, */





    /* Coc-Diagnostics */

    "diagnostic.level": "hint",
    "diagnostic.displayByAle": false,
    "diagnostic.errorSign": "ÔÅ±",
    "diagnostic.warningSign": "ÔÅö", "diagnostic.infoSign": "ÔÄ§",
    "diagnostic.hintSign": "Ô†¥",

    // "diagnostic.virtualText": true,
    // "diagnostic.virtualText": true,
    // "diagnostic.checkCurrentLine": true,

    /* Coc-Snippets */
    "snippets.snipmate.enable": false,
    "snippets.priority": 99,

    /* Coc-lua */
    // We want to be able to develop for neovim...
    "Lua.workspace.library": {
        "/usr/share/nvim/runtime/lua": true,
        "/usr/share/nvim/runtime/lua/vim": true,
        "/usr/share/nvim/runtime/lua/vim/lsp": true
    },
    "Lua.diagnostics.globals": [
        "vim"
    ],
    "Lua.workspace.maxPreload": 2000,

    "languageserver": {
        "svls": {
            "command": "svls",
            "filetypes": ["systemverilog"]
        }
    },

    "highlight.colorNames.enable": false,
    "clangd.arguments": [
        "--background-index",
        // "--all-scopes-completion",
        "--header-insertion=iwyu",
        "--compile-commands-dir=${workspaceFolder}/",
        "--clang-tidy"],
        // "clangd.fallbackFlags": ["-std=c++17"]

                // "languageserver": {
                //     "go": {
                //         "command": "gopls",
                //         "rootPatterns": ["go.mod", ".vim/", ".git/", ".svn/"],
                //         "filetypes": ["go"],
                //         "initializationOptions": {
                //             "usePlaceholders": true
                //         }
                //     }
                // },





            "go.goplsOptions": {
                "verboseOutput": true,
                "completeUnimported": true,
                "usePlaceholders": true,
                "hoverKind": "FullDocumentation",
                "expandWorkspaceToModule": false,
                "env": {
                    "GO111MODULE": "off"
                }
            },
            "go.goplsEnv": {
                "GO111MODULE": "off"
            },
            "go.disable": {
                "workspaceFolders": false
            },
            "go.enable": true,
            "snippets.ultisnips.directories": [
                "UltiSnips",
                "gosnippets/UltiSnips"
            ],
            "suggest.detailMaxLength": 120,
            "snippets.ultisnips.pythonPrompt": false,
}
